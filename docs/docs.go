// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/report/averages": {
            "get": {
                "description": "Report the average number resources per user",
                "produces": [
                    "application/json"
                ],
                "summary": "report averages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AveragesResponse"
                        }
                    }
                }
            }
        },
        "/report/lost": {
            "get": {
                "description": "Report the total value of lost items because of infected users",
                "produces": [
                    "application/json"
                ],
                "summary": "report lost value of items because of infected users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.LostItemValue"
                        }
                    }
                }
            }
        },
        "/report/percentage": {
            "get": {
                "description": "Report the percentage of (un)infected users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "report (un)infected percentage",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "infected",
                        "name": "infected",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PercentageResponse"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Register a user, where items is an array of integers, each representing an item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "register",
                "parameters": [
                    {
                        "description": "user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RegistrationResponse"
                        }
                    }
                }
            }
        },
        "/user/trade": {
            "post": {
                "description": "Trade items with another user",
                "summary": "Trade with another user",
                "parameters": [
                    {
                        "description": "trade request",
                        "name": "trade",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.TradeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/user/{id}/flag": {
            "post": {
                "description": "Flag a user as infected",
                "summary": "Flag another user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "flag request",
                        "name": "flag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FlagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/user/{id}/location": {
            "put": {
                "description": "Update the location of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "update location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "location",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.Location"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AveragesResponse": {
            "type": "object",
            "properties": {
                "averages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.UserItemAverage"
                    }
                }
            }
        },
        "api.FlagRequest": {
            "type": "object",
            "properties": {
                "sender_id": {
                    "type": "integer"
                }
            }
        },
        "api.PercentageResponse": {
            "type": "object",
            "properties": {
                "percentage": {
                    "type": "number"
                }
            }
        },
        "api.RegistrationResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "user.ItemType": {
            "type": "integer",
            "enum": [
                1
            ],
            "x-enum-varnames": [
                "Ammunition"
            ]
        },
        "user.Location": {
            "type": "object",
            "properties": {
                "lat": {
                    "description": "Latitude",
                    "type": "number"
                },
                "lon": {
                    "description": "Longitude",
                    "type": "number"
                }
            }
        },
        "user.LostItemValue": {
            "type": "object",
            "properties": {
                "lost": {
                    "type": "integer"
                }
            }
        },
        "user.TradeRequest": {
            "type": "object",
            "properties": {
                "offered_items": {
                    "description": "The items the sender offers to give",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.UserItem"
                    }
                },
                "recepient_id": {
                    "description": "The ID of the user who to trade with",
                    "type": "integer"
                },
                "requested_items": {
                    "description": "The items the sender wants to receive",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.UserItem"
                    }
                },
                "sender_id": {
                    "description": "The ID of the user who sent the trade request",
                    "type": "integer"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "Your age",
                    "type": "integer"
                },
                "gender": {
                    "description": "Even in a post-apocalyptic world, you can be whatever you want",
                    "type": "string"
                },
                "items": {
                    "description": "Items you have, can be ammunition (1), medication (2),\n\t\tfood (3) or water (4), each can appear multiple times\n\t\tin case you have more than one",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.UserItem"
                    }
                },
                "location": {
                    "description": "Your location in the world",
                    "allOf": [
                        {
                            "$ref": "#/definitions/user.Location"
                        }
                    ]
                },
                "name": {
                    "description": "Your name",
                    "type": "string"
                }
            }
        },
        "user.UserItem": {
            "type": "object",
            "properties": {
                "item": {
                    "description": "The item type",
                    "allOf": [
                        {
                            "$ref": "#/definitions/user.ItemType"
                        }
                    ]
                }
            }
        },
        "user.UserItemAverage": {
            "type": "object",
            "properties": {
                "average": {
                    "type": "number"
                },
                "item": {
                    "$ref": "#/definitions/user.ItemType"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
